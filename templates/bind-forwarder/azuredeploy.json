{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine."
        }
      },
      "forwardIP": {
        "type": "string",
        "defaultValue": "168.63.129.16",
        "metadata": {
          "description": "This is the IP address to forward DNS queries to.  The default value represents Azure's internal DNS recursive resolvers."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      }
    },
    "variables": {
      "vmSize": "Standard_A1",
      "ubuntuOSVersion": "14.04.2-LTS",
      "asetName": "dnsproxy-avail",
      "vnetAddressPrefix": "10.0.0.0/8",
      "storType": "Standard_LRS",
      "location": "[parameters('location')]",
      "nicName": "[concat(parameters('vmName'), '-', 'nic')]",
      "pipName": "[concat(parameters('vmName'), '-', 'pip')]",
      "artifactsBaseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-dns-forwarder",
      "scriptUrl": "[concat(variables('artifactsBaseUrl'),'/','forwarderSetup.sh')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Storage/StorageAccounts",
        "comments": "Storage account for the VHD files for the VMs",
        "name": "[parameters('storageAccName')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('location')]",
        "properties": {
          "accountType": "[variables('storType')]"
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "comments": "availability set for creating a HA cluster, run the template multiple times to get multiple DNS servers",
        "name": "[variables('asetName')]",
        "apiVersion": "2017-12-01",
        "location": "[variables('location')]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "comments": "A public IP to allow us to SSH into the VM, not recommended for production DNS servers",
        "name": "[variables('pipName')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "comments": "A single network interface on each DNS server",
        "name": "[variables('nicName')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
                },
                "subnet": {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/', variables('subnet1Name'))]"
                },
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "comments": "A stock Ubuntu server, a VM extension will add the DNS server to it later",
        "name": "[parameters('vmName')]",
        "apiVersion": "2017-03-30",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
          "[concat('Microsoft.Storage/StorageAccounts/', parameters('storageAccName'))]",
          "[concat('Microsoft.Compute/availabilitySets/', variables('asetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('asetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[variables('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": false
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "comments": "The shell script to install Bind9 and setup the ACL and forwarders.  If this step fails, check the logs in /var/log/waagent.log and /var/log/azure/* for details",
        "name": "[concat(parameters('vmName'),'/setupdnsfirewall')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[variables('scriptUrl')]"
            ],
            "commandToExecute": "[concat('sh forwarderSetup.sh',' ',parameters('forwardIP'),' ', variables('vnetAddressPrefix'))]"
          }
        }
      }
    ]
  }